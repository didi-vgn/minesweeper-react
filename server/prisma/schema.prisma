generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @db.VarChar(255) @unique
  password Password?
  nickname String @db.VarChar(255) @unique
  role Role @default(USER)
  games Game[]
  adventureProgress Adventure_Progress[]
  stats Stats?
  achievements User_Achievement[] 
}

model Password {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id]) 
  userId String @unique
  password String @db.VarChar(255)

}

model Game{
  id Int @id @default(autoincrement())
  user User? @relation(fields: [userId], references: [id])
  userId String?
  mode GameMode
  time String 
  bbbv Int
  points Float
  board Json
}

model Adventure_Progress {
  id Int @id @default(autoincrement())
  levelId Int
  user User @relation(fields: [userId], references: [id])
  userId String
  collectedGems Int
  points Int

  @@unique([userId, levelId])
}

model Achievement {
  id String @id @unique
  title String @unique
  description String
  users User_Achievement[]
}

model User_Achievement {
  user User @relation(fields: [userId], references: [id])
  userId String
  achievement Achievement @relation(fields: [achievementId], references: [id])
  achievementId String
  earnedAt DateTime @default(now())

  @@id([userId, achievementId])
}

model Stats {
  userId String @id @unique
  levelsCompleted Int @default(0)
  bombsScanned Int @default(0)
  totalGems Int @default(0)
  deaths Int @default(0)
  pinkGames Int @default(0)
  blueGames Int @default(0)
  whiteGames Int @default(0)
  yellowGames Int @default(0)
  greenGames Int @default(0)

  user User @relation(fields: [userId], references: [id])
}

enum GameMode{
  BEGGINER
  INTERMEDIATE
  EXPERT
}

enum Role{
  USER
  ADMIN
}